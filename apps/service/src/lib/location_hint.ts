/**
 * Utilities to extract a location hint (region code) from a user's location.
 * These functions help determine the closest region for routing or sharding.
 *
 * Credit: https://gist.github.com/jacwright/da95b48651c42f52263ef761e5df06c5?utm_source=chatgpt.com
 */

/**
 * Returns the closest location hint (region code) for a given location.
 *
 * @param location - The user's location object.
 * @returns The closest region code.
 *
 * Comment Author: Generated by Cursor AI
 */
export function getLocationHint(
  location: Location = {},
): DurableObjectLocationHint {
  if (!location.continentCode && !location.point) return "enam";
  const areas = continentCodes[location.continentCode || "AN"];
  let closest = areas[0];
  let shortestDistance = Infinity;

  if (areas.length === 1 || !location.point)
    return closest as DurableObjectLocationHint;

  const { lat, lon } = location.point;
  const userLatLong = [lat, lon] as [number, number];
  areas.forEach((area) => {
    const latLong = locationLatLongs[area];
    const distance = getDistance(latLong, userLatLong);
    if (distance < shortestDistance) {
      shortestDistance = distance;
      closest = area;
    }
  });

  return closest as DurableObjectLocationHint;
}

/**
 * Location interface for continent code and point.
 *
 * Comment Author: Generated by Cursor AI
 */
interface Location {
  continentCode?: ContinentCode;
  point?: { lat: number; lon: number };
}

/**
 * Type for valid location region codes.
 *
 * Comment Author: Generated by Cursor AI
 */
type Locations = keyof typeof locationLatLongs;

/**
 * Mapping of region codes to their latitude and longitude.
 *
 * Comment Author: Generated by Cursor AI
 */
const locationLatLongs: Record<DurableObjectLocationHint, [number, number]> = {
  wnam: [37.797958, -122.238303], // Western North America
  enam: [39.082657, -77.658312], // Eastern North America
  sam: [-9.07816, -59.0535], // South America
  weur: [48.851311, 2.295185], // Western Europe
  eeur: [44.347606, 25.674957], // Eastern Europe
  apac: [1.415, 104.021515], // Asia-Pacific
  oc: [-23.045663, 134.341405], // Oceania
  afr: [18.598045, 17.183202], // Africa
  me: [31.610075, 48.911718], // Middle East
};

/**
 * Mapping of continent codes to possible region codes.
 *
 * Comment Author: Generated by Cursor AI
 */
const continentCodes: Record<ContinentCode, Locations[]> = {
  AF: ["afr"], // Africa
  AN: ["afr", "apac", "weur", "eeur", "wnam", "enam", "oc", "sam"], // Antarctica
  AS: ["apac"], // Asia
  EU: ["weur", "eeur"], // Europe
  NA: ["wnam", "enam"], // North america
  OC: ["oc"], // Oceania
  SA: ["sam"], // South america
};

/**
 * Returns the distance between two lat/long coordinates in km.
 *
 * @param pos1 - First position [lat, lon]
 * @param pos2 - Second position [lat, lon]
 * @returns Distance in kilometers
 *
 * Author: Generated by Cursor AI
 */
function getDistance(pos1: [number, number], pos2: [number, number]) {
  var R = 6371; // Radius of the earth in km
  var dLat = deg2rad(pos2[0] - pos1[0]); // deg2rad below
  var dLon = deg2rad(pos2[1] - pos1[1]);
  var a =
    Math.sin(dLat / 2) * Math.sin(dLat / 2) +
    Math.cos(deg2rad(pos1[0])) *
      Math.cos(deg2rad(pos2[0])) *
      Math.sin(dLon / 2) *
      Math.sin(dLon / 2);
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  var d = R * c; // Distance in km
  return d;
}

/**
 * Converts degrees to radians.
 *
 * @param deg - Degrees
 * @returns Radians
 *
 * Comment Author: Generated by Cursor AI
 */
function deg2rad(deg: number) {
  return deg * (Math.PI / 180);
}

// /**
//  * Extract the location hint from the colo.
//  *
//  * @param colo - The colo to extract the location hint from.
//  * @returns The location hint.
//  */
// export function coloToHint(colo: string): DurableObjectLocationHint {
//     const westUreList = ['MAD','PAR','MRS','FRA','AMS']; // approximate Cloudflare W. Europe
//     if (westUreList.includes(colo)) return 'weur';
//     const eastEuro = ['ZRH','VIE','ATH','KBP','WAW'];
//     if (eastEuro.includes(colo)) return 'eeur';
//     // Add other regions: North America, Asia, ME, AFR, etc.
//     console.warn(`Unknown colo ${colo}, defaulting to us-east-1 hint logic`);
//     return 'enam';
//   }
