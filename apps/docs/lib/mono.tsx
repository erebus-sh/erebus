import { ImageResponse } from "next/og";
import type { ReactNode } from "react";
import fs from "node:fs/promises";
import type { ImageResponseOptions } from "next/server";
import path from "node:path";
import Image from "next/image";
import Logo from "@/components/logo";

export interface GenerateProps {
  title: ReactNode;
  description?: ReactNode;
}

export async function generateOGImage(
  options: GenerateProps & Partial<ImageResponseOptions>,
): Promise<ImageResponse> {
  const { title, description, ...rest } = options;

  // Load your local font files
  const fontPathRegular = path.join(
    process.cwd(),
    "public",
    "fonts",
    "JetBrainsMono-Regular.ttf",
  );
  const fontPathBold = path.join(
    process.cwd(),
    "public",
    "fonts",
    "JetBrainsMono-Bold.ttf",
  );

  console.log(fontPathRegular, fontPathBold);

  const [fontRegularData, fontBoldData] = await Promise.all([
    fs.readFile(fontPathRegular).then((b) => b.buffer as ArrayBuffer),
    fs.readFile(fontPathBold).then((b) => b.buffer as ArrayBuffer),
  ]);

  return new ImageResponse(
    generate({
      title,
      description,
    }),
    {
      width: 1200,
      height: 630,
      // TODO: Fucking fonts don't work at all, fuck 'em
      // fonts: [
      //   {
      //     name: "Mono",
      //     data: fontRegularData,
      //     weight: 400,
      //   },
      //   {
      //     name: "Mono",
      //     data: fontBoldData,
      //     weight: 600,
      //   },
      // ],
      ...rest,
    },
  );
}

function generate({ title, description }: GenerateProps) {
  const siteName = "";
  const primaryTextColor = "rgb(240,240,240)";
  const logo = (
    <svg
      viewBox="0 0 279 79"
      xmlns="http://www.w3.org/2000/svg"
      className="h-full w-auto"
      preserveAspectRatio="xMidYMid meet"
    >
      <path
        d="M72.16 60H62.56V17.12H72.16V60ZM98.848 60H65.248V51.36H98.848V60ZM97.888 42.72H65.248V34.144H97.888V42.72ZM98.848 25.76H65.248V17.12H98.848V25.76ZM110.225 60H100.625V27.936H109.521V37.088L110.225 37.408V60ZM110.225 41.44H108.305V36.448H110.097C110.396 34.6987 110.972 33.1413 111.825 31.776C112.721 30.368 113.916 29.28 115.409 28.512C116.902 27.7013 118.716 27.296 120.849 27.296C123.281 27.296 125.222 27.808 126.673 28.832C128.166 29.8133 129.254 31.1573 129.937 32.864C130.62 34.528 130.961 36.4053 130.961 38.496V43.808H121.361V40.48C121.361 38.688 120.956 37.408 120.145 36.64C119.377 35.8293 118.012 35.424 116.049 35.424C113.916 35.424 112.401 35.9147 111.505 36.896C110.652 37.8773 110.225 39.392 110.225 41.44ZM148.901 60.64C145.36 60.64 142.224 60.0427 139.493 58.848C136.763 57.6533 134.651 55.8187 133.157 53.344C131.664 50.8693 130.917 47.7547 130.917 44C130.917 40.5867 131.664 37.6427 133.157 35.168C134.651 32.6507 136.72 30.7093 139.365 29.344C142.053 27.9787 145.168 27.296 148.709 27.296C152.208 27.296 155.259 27.8933 157.861 29.088C160.507 30.2827 162.555 32.0533 164.006 34.4C165.456 36.704 166.181 39.52 166.181 42.848C166.181 43.4027 166.16 43.9147 166.118 44.384C166.075 44.8533 166.011 45.3653 165.925 45.92H137.125V40.864H159.141L156.965 44C156.965 43.5733 156.965 43.168 156.965 42.784C156.965 42.4 156.965 42.016 156.965 41.632C156.965 39.2 156.304 37.4507 154.981 36.384C153.659 35.3173 151.504 34.784 148.517 34.784C145.275 34.784 143.013 35.424 141.733 36.704C140.453 37.9413 139.813 39.9253 139.813 42.656V45.088C139.813 47.8187 140.453 49.824 141.733 51.104C143.013 52.3413 145.296 52.96 148.581 52.96C151.397 52.96 153.381 52.5973 154.533 51.872C155.685 51.1467 156.261 50.1013 156.261 48.736V48.096H165.861V48.8C165.861 51.104 165.157 53.152 163.75 54.944C162.341 56.736 160.357 58.144 157.797 59.168C155.28 60.1493 152.315 60.64 148.901 60.64ZM189.965 60.64C186.253 60.64 183.33 59.8507 181.197 58.272C179.106 56.6507 177.762 54.2613 177.165 51.104H175.373L176.076 44.192H177.293C177.293 46.0267 177.634 47.52 178.317 48.672C179.042 49.7813 180.087 50.592 181.453 51.104C182.861 51.616 184.589 51.872 186.637 51.872C188.727 51.872 190.434 51.616 191.757 51.104C193.079 50.592 194.061 49.76 194.701 48.608C195.341 47.456 195.661 45.92 195.661 44C195.661 41.9947 195.341 40.4373 194.701 39.328C194.061 38.176 193.079 37.344 191.757 36.832C190.434 36.32 188.749 36.064 186.701 36.064C183.586 36.064 181.239 36.64 179.661 37.792C178.082 38.944 177.293 40.9067 177.293 43.68H176.076V36.448H177.805C178.359 33.76 179.639 31.5627 181.645 29.856C183.693 28.1493 186.615 27.296 190.413 27.296C193.613 27.296 196.322 27.9787 198.541 29.344C200.759 30.7093 202.444 32.6507 203.597 35.168C204.791 37.6427 205.389 40.5867 205.389 44C205.389 47.3707 204.791 50.3147 203.597 52.832C202.444 55.3067 200.717 57.2267 198.413 58.592C196.109 59.9573 193.293 60.64 189.965 60.64ZM176.589 60H167.692V17.12H177.293V49.696L176.589 50.528V60ZM220.068 60.64C217.081 60.64 214.585 60.0853 212.58 58.976C210.617 57.824 209.145 56.288 208.164 54.368C207.225 52.448 206.756 50.2933 206.756 47.904V27.936H216.356V44.704C216.356 47.264 216.975 49.1413 218.212 50.336C219.449 51.488 221.583 52.064 224.612 52.064C227.769 52.064 229.967 51.4453 231.204 50.208C232.484 48.928 233.124 46.9227 233.124 44.192L234.34 44.128L235.044 50.208H233.252C232.996 52 232.356 53.6853 231.332 55.264C230.351 56.8427 228.921 58.144 227.044 59.168C225.209 60.1493 222.884 60.64 220.068 60.64ZM242.724 60H233.764V50.08L233.124 49.76V27.936H242.724V60ZM261.264 60.64C255.888 60.64 251.75 59.6373 248.848 57.632C245.947 55.584 244.496 52.704 244.496 48.992V48.8H254.096V49.376C254.096 50.8267 254.608 51.808 255.632 52.32C256.699 52.7893 258.598 53.024 261.328 53.024C263.888 53.024 265.574 52.8107 266.384 52.384C267.238 51.9147 267.664 51.2107 267.664 50.272C267.664 49.376 267.344 48.7573 266.704 48.416C266.064 48.032 264.806 47.712 262.928 47.456L253.904 46.368C250.704 46.0267 248.23 45.1307 246.48 43.68C244.774 42.2293 243.92 40.1387 243.92 37.408C243.92 35.5307 244.475 33.8453 245.584 32.352C246.694 30.816 248.4 29.6 250.704 28.704C253.051 27.7653 256.059 27.296 259.728 27.296C263.227 27.296 266.192 27.744 268.624 28.64C271.099 29.4933 272.976 30.7947 274.256 32.544C275.536 34.2933 276.176 36.4693 276.176 39.072V39.264H266.576V38.88C266.576 37.984 266.384 37.2587 266 36.704C265.659 36.1067 264.955 35.6587 263.888 35.36C262.864 35.0613 261.371 34.912 259.408 34.912C257.019 34.912 255.419 35.1467 254.608 35.616C253.798 36.0427 253.392 36.768 253.392 37.792C253.392 38.6027 253.712 39.2213 254.352 39.648C255.035 40.032 256.422 40.3733 258.512 40.672L265.36 41.504C269.627 41.9733 272.656 42.9547 274.448 44.448C276.24 45.9413 277.136 48.0107 277.136 50.656C277.136 52.6613 276.496 54.4107 275.216 55.904C273.936 57.3973 272.123 58.5707 269.776 59.424C267.43 60.2347 264.592 60.64 261.264 60.64Z"
        fill="#FAFAFA"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M32.6985 63.7997C26.6988 59.6677 22.4151 52.1199 22.6837 42.319C24.4675 54.4834 32.1152 60.0164 39.3834 60.4483C42.701 58.1154 45.4169 54.9988 47.2656 51.382C40.1147 52.6995 31.7512 50.3978 25.0016 43.2662C34.8497 50.6135 44.2011 49.1323 49.6328 44.2816C49.8672 42.8808 50 41.4644 50 39.9985C50 37.3168 49.5834 34.7339 48.7839 32.2993C44.667 38.2982 37.1179 42.5814 27.3005 42.3128C39.4818 40.5292 45.0155 32.8825 45.4508 25.6152C43.1176 22.2981 40.0006 19.5825 36.3833 17.734C37.701 24.884 35.399 33.2465 28.2665 39.9952C35.6147 30.1484 34.1151 20.7981 29.282 15.3671C27.881 15.1328 26.4644 15 24.9984 15C22.3163 15 19.7148 15.4166 17.2982 16.2003C23.2978 20.3323 27.5816 27.8801 27.2976 37.681C25.5321 25.5166 17.8815 19.9836 10.6166 19.5517C7.29903 21.8846 4.58305 25.0012 2.73436 28.618C9.88528 27.3005 18.2488 29.6022 24.9984 36.7338C15.1316 29.3865 5.79885 30.8677 0.367165 35.7184C0.11718 37.1192 0 38.5356 0 40.0015C0 42.6832 0.416643 45.2661 1.20046 47.7007C5.33302 41.7018 12.8664 37.4186 22.6839 37.6872C10.5179 39.4708 4.98424 47.1175 4.55227 54.3848C6.88546 57.7019 10.0025 60.4175 13.6197 62.266C12.3021 55.116 14.6041 46.7535 21.7366 40.0048C14.3884 49.8516 15.8697 59.2019 20.7211 64.6329C22.122 64.8672 23.5386 65 25.0047 65C27.6868 65 30.27 64.5834 32.7049 63.7997H32.6985Z"
        fill="#FAFAFA"
        fillOpacity="0.980392"
      />
    </svg>
  );

  return (
    <div
      style={{
        display: "flex",
        flexDirection: "column",
        width: "100%",
        height: "100%",
        color: "white",
        backgroundColor: "rgb(10,10,10)",
      }}
    >
      <div
        style={{
          display: "flex",
          flexDirection: "column",
          width: "100%",
          height: "100%",
          padding: "4rem",
        }}
      >
        <p
          style={{
            fontWeight: 600,
            fontSize: "76px",
          }}
        >
          {title}
        </p>
        <p
          style={{
            fontSize: "48px",
            color: "rgba(240,240,240,0.7)",
          }}
        >
          {description}
        </p>
        <div
          style={{
            display: "flex",
            flexDirection: "row",
            alignItems: "center",
            gap: "24px",
            marginTop: "auto",
            color: primaryTextColor,
          }}
        >
          {logo}
          <p
            style={{
              fontSize: "46px",
              fontWeight: 600,
            }}
          >
            {siteName}
          </p>
        </div>
      </div>
    </div>
  );
}
